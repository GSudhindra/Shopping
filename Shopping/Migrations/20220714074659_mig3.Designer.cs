// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping.Models;

namespace Shopping.Migrations
{
    [DbContext(typeof(shopContext))]
    [Migration("20220714074659_mig3")]
    partial class mig3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shopping.Models.Customer", b =>
                {
                    b.Property<string>("Customer_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Customer_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_idNavigationProduct_id")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Customer_id");

                    b.HasIndex("Product_idNavigationProduct_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Shopping.Models.Product", b =>
                {
                    b.Property<string>("Product_id")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Pimage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seller_idNavigationSeller_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product_id");

                    b.HasIndex("Seller_idNavigationSeller_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shopping.Models.Seller", b =>
                {
                    b.Property<string>("Seller_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seller_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Seller_id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Shopping.Models.Customer", b =>
                {
                    b.HasOne("Shopping.Models.Product", "Product_idNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("Product_idNavigationProduct_id");

                    b.Navigation("Product_idNavigation");
                });

            modelBuilder.Entity("Shopping.Models.Product", b =>
                {
                    b.HasOne("Shopping.Models.Seller", "Seller_idNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Seller_idNavigationSeller_id");

                    b.Navigation("Seller_idNavigation");
                });

            modelBuilder.Entity("Shopping.Models.Product", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Shopping.Models.Seller", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
